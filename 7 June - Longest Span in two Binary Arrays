
import java.util.HashMap;

class Solution {
    public int longestCommonSum(int[] a1, int[] a2) {
        int n = a1.length;

        HashMap<Integer, Integer> diffMap = new HashMap<>();
        
        int maxLen = 0;
        int sum1 = 0, sum2 = 0;

        for (int i = 0; i < n; i++) {
            sum1 += a1[i];
            sum2 += a2[i];

            int diff = sum1 - sum2;

            if (diff == 0) {
                maxLen = i + 1;
            } else if (diffMap.containsKey(diff)) {
                maxLen = Math.max(maxLen, i - diffMap.get(diff));
            } else {
                diffMap.put(diff, i);
            }
        }

        return maxLen;
    }

}
