class Solution {
    static int longestSubarray(int[] arr, int k) {
        int n = arr.length;
        int[] temp = new int[n];

        for (int i = 0; i < n; i++) {
            temp[i] = (arr[i] > k) ? 1 : -1;
        }

        Map<Integer, Integer> map = new HashMap<>();
        int prefixSum = 0;
        int maxLength = 0;

        map.put(0, -1);

        for (int i = 0; i < n; i++) {
            prefixSum += temp[i];

            if (prefixSum > 0) {
                maxLength = i + 1;
            } else {
                if (map.containsKey(prefixSum - 1)) {
                    maxLength = Math.max(maxLength, i - map.get(prefixSum - 1));
                }
            }

            map.putIfAbsent(prefixSum, i);
        }

        return maxLength;
    }
}

