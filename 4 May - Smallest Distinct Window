// User function Template for Java

import java.util.*;

class Solution {
    public int findSubString(String str) {
        // Step 1: Find the total number of distinct characters in str
        Set<Character> uniqueChars = new HashSet<>();
        for (char ch : str.toCharArray()) {
            uniqueChars.add(ch);
        }
        int totalUnique = uniqueChars.size();

        // Step 2: Use sliding window to find the minimum length substring
        Map<Character, Integer> windowFreq = new HashMap<>();
        int minLen = Integer.MAX_VALUE;
        int start = 0, count = 0;

        for (int end = 0; end < str.length(); end++) {
            char ch = str.charAt(end);
            windowFreq.put(ch, windowFreq.getOrDefault(ch, 0) + 1);

            // Count how many unique characters we have in the current window
            if (windowFreq.get(ch) == 1) {
                count++;
            }

            // Try to shrink the window from the left
            while (count == totalUnique) {
                minLen = Math.min(minLen, end - start + 1);

                // Shrink
                char leftChar = str.charAt(start);
                windowFreq.put(leftChar, windowFreq.get(leftChar) - 1);
                if (windowFreq.get(leftChar) == 0) {
                    count--;
                }
                start++;
            }
        }

        return minLen;
    }
}
