/*
class Node {
    int data;
    Node left, right;
    Node(int val) {
        data = val;
        left = right = null;
    }
}
*/

class Solution {
    public int nodeSum(Node root, int l, int r) {
        // Base case: if the root is null, return 0
        if (root == null) return 0;
        
        int sum = 0;
        
        // If current node is within range, include it in sum
        if (root.data >= l && root.data <= r)
            sum += root.data;
        
        // If current node's value is greater than l, explore left subtree
        if (root.data > l)
            sum += nodeSum(root.left, l, r);
        
        // If current node's value is less than r, explore right subtree
        if (root.data < r)
            sum += nodeSum(root.right, l, r);
        
        return sum;
    }
}
