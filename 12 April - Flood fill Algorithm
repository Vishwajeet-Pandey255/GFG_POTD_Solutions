class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        int originalColor = image[sr][sc];
        if (originalColor != newColor) {
            dfs(image, sr, sc, originalColor, newColor);
        }
        return image;
    }

    private void dfs(int[][] image, int row, int col, int color, int newColor) {
        // Check boundaries and if color matches the original
        if (row < 0 || row >= image.length || col < 0 || col >= image[0].length || image[row][col] != color) {
            return;
        }

        // Change the color
        image[row][col] = newColor;

        // Visit all 4 directions: up, down, left, right
        dfs(image, row - 1, col, color, newColor); // up
        dfs(image, row + 1, col, color, newColor); // down
        dfs(image, row, col - 1, color, newColor); // left
        dfs(image, row, col + 1, color, newColor); // right
    }
}
