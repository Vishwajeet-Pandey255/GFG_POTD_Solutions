class Solution {
    public int uniquePaths(int[][] grid) {
        int n = grid.length;
        if (n == 0) return 0;
        int m = grid[0].length;
        if (m == 0) return 0;
        
        if (grid[0][0] == 1) return 0;
        
        int[] dp = new int[m];
        
        dp[0] = 1;
        
        for (int j = 1; j < m; j++) {
            if (grid[0][j] == 1) {
                dp[j] = 0; 
            } else {
                dp[j] = dp[j - 1]; 
            }
        }
        
        for (int i = 1; i < n; i++) {
            if (grid[i][0] == 1) {
                dp[0] = 0; // blocked, no way to reach
            }
            
            for (int j = 1; j < m; j++) {
                if (grid[i][j] == 1) {
                    dp[j] = 0; // blocked cell
                } else {
                    dp[j] = dp[j] + dp[j - 1];
                }
            }
        }
        
        return dp[m - 1];
    }
}
