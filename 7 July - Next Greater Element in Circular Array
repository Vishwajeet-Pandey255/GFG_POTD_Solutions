import java.util.*;

class Solution {
    public ArrayList<Integer> nextLargerElement(int[] arr) {
        int n = arr.length;
        ArrayList<Integer> result = new ArrayList<>(Collections.nCopies(n, -1));
        Stack<Integer> stack = new Stack<>();

        // Traverse twice the array length to simulate circular nature
        for (int i = 2 * n - 1; i >= 0; i--) {
            int index = i % n;

            // Maintain stack in decreasing order
            while (!stack.isEmpty() && stack.peek() <= arr[index]) {
                stack.pop();
            }

            if (i < n) {
                if (!stack.isEmpty()) {
                    result.set(index, stack.peek());
                }
            }

            stack.push(arr[index]);
        }

        return result;
    }
}
