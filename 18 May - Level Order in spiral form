class Solution {
    public ArrayList<Integer> findSpiral(Node root) {
        ArrayList<Integer> result = new ArrayList<>();
        if (root == null)
            return result;

        Queue<Node> queue = new LinkedList<>();
        queue.add(root);
        boolean leftToRight = false; // Level 0: right to left

        while (!queue.isEmpty()) {
            int size = queue.size();
            Integer[] level = new Integer[size];

            for (int i = 0; i < size; i++) {
                Node current = queue.poll();

                int index = leftToRight ? i : (size - 1 - i);
                level[index] = current.data;

                if (current.left != null)
                    queue.add(current.left);
                if (current.right != null)
                    queue.add(current.right);
            }

            // Add current level values to result
            for (int val : level) {
                result.add(val);
            }

            // Toggle the direction
            leftToRight = !leftToRight;
        }

        return result;
    }
}
