/*
class Node {
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data = data;
        left = null;
        right = null;
    }
}
*/

class Solution {
    Node removekeys(Node root, int l, int r) {
        // Base case
        if (root == null)
            return null;
        
        // First fix the left and right subtrees
        root.left = removekeys(root.left, l, r);
        root.right = removekeys(root.right, l, r);
        
        // Now check if root's data is outside the range [l, r]
        if (root.data < l) {
            // current node and its left subtree are out of range
            return root.right;
        }
        else if (root.data > r) {
            // current node and its right subtree are out of range
            return root.left;
        }
        
        // If root's data is in range, return root
        return root;
    }
}
